{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../modules/component-store/src/debounce-sync.ts","../../../../modules/component-store/src/component-store.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","debounceSync","source","Observable","observer","actionSubscription","actionValue","rootSubscription","Subscription","add","subscribe","complete","asapScheduler","schedule","undefined","initialStateToken","InjectionToken","ComponentStore","defaultState","this","destroySubject$","ReplaySubject","destroy$","asObservable","stateSubject$","isInitialized","state$","select","s","initState","prototype","ngOnDestroy","updater","updaterFn","_this","observableOrValue","initializationError","subscription","isObservable","of","pipe","concatMap","scheduled","queueScheduler","withLatestFrom","throwError","Error","constructor","name","takeUntil","_a","_b","currentState","state","setState","stateOrUpdaterFn","args","_i","processSelectorArgs","observables","projector","config","debounce","source$","map","combineLatest","projectorArgs","apply","distinctUntilChanged","shareReplay","refCount","bufferSize","effect","generator","origin$","Subject","selectorArgs","Array","from","projectorOrConfig","pop","Object","assign","Injectable","Optional","type","Inject"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license MIT License\n *\n * Copyright (c) 2017-2020 Nicholas Jamieson and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport {\n  asapScheduler,\n  MonoTypeOperatorFunction,\n  Observable,\n  Subscription,\n} from 'rxjs';\n\nexport function debounceSync<T>(): MonoTypeOperatorFunction<T> {\n  return (source) =>\n    new Observable<T>((observer) => {\n      let actionSubscription: Subscription | undefined;\n      let actionValue: T | undefined;\n      const rootSubscription = new Subscription();\n      rootSubscription.add(\n        source.subscribe({\n          complete: () => {\n            if (actionSubscription) {\n              observer.next(actionValue);\n            }\n            observer.complete();\n          },\n          error: (error) => observer.error(error),\n          next: (value) => {\n            actionValue = value;\n            if (!actionSubscription) {\n              actionSubscription = asapScheduler.schedule(() => {\n                observer.next(actionValue);\n                actionSubscription = undefined;\n              });\n              rootSubscription.add(actionSubscription);\n            }\n          },\n        })\n      );\n      return rootSubscription;\n    });\n}\n","import {\n  isObservable,\n  Observable,\n  of,\n  ReplaySubject,\n  Subscription,\n  throwError,\n  combineLatest,\n  Subject,\n  queueScheduler,\n  scheduled,\n} from 'rxjs';\nimport {\n  concatMap,\n  takeUntil,\n  withLatestFrom,\n  map,\n  distinctUntilChanged,\n  shareReplay,\n} from 'rxjs/operators';\nimport { debounceSync } from './debounce-sync';\nimport {\n  Injectable,\n  OnDestroy,\n  Optional,\n  InjectionToken,\n  Inject,\n} from '@angular/core';\n\n/**\n * Return type of the effect, that behaves differently based on whether the\n * argument is passed to the callback.\n */\nexport interface EffectReturnFn<T> {\n  (): void;\n  (t: T | Observable<T>): Subscription;\n}\n\nexport interface SelectConfig {\n  debounce?: boolean;\n}\n\nexport const initialStateToken = new InjectionToken('ComponentStore InitState');\n\n@Injectable()\nexport class ComponentStore<T extends object> implements OnDestroy {\n  // Should be used only in ngOnDestroy.\n  private readonly destroySubject$ = new ReplaySubject<void>(1);\n  // Exposed to any extending Store to be used for the teardowns.\n  readonly destroy$ = this.destroySubject$.asObservable();\n\n  private readonly stateSubject$ = new ReplaySubject<T>(1);\n  private isInitialized = false;\n  // Needs to be after destroy$ is declared because it's used in select.\n  readonly state$: Observable<T> = this.select((s) => s);\n\n  constructor(@Optional() @Inject(initialStateToken) defaultState?: T) {\n    // State can be initialized either through constructor or setState.\n    if (defaultState) {\n      this.initState(defaultState);\n    }\n  }\n\n  /** Completes all relevant Observable streams. */\n  ngOnDestroy() {\n    this.stateSubject$.complete();\n    this.destroySubject$.next();\n  }\n\n  /**\n   * Creates an updater.\n   *\n   * Throws an error if updater is called with synchronous values (either\n   * imperative value or Observable that is synchronous) before ComponentStore\n   * is initialized. If called with async Observable before initialization then\n   * state will not be updated and subscription would be closed.\n   *\n   * @param updaterFn A static updater function that takes 2 parameters (the\n   * current state and an argument object) and returns a new instance of the\n   * state.\n   * @return A function that accepts one argument which is forwarded as the\n   *     second argument to `updaterFn`. Everytime this function is called\n   *     subscribers will be notified of the state change.\n   */\n  updater<V>(\n    updaterFn: (state: T, value: V) => T\n  ): unknown extends V ? () => void : (t: V | Observable<V>) => Subscription {\n    return ((observableOrValue?: V | Observable<V>): Subscription => {\n      let initializationError: Error | undefined;\n      // We can receive either the value or an observable. In case it's a\n      // simple value, we'll wrap it with `of` operator to turn it into\n      // Observable.\n      const observable$ = isObservable(observableOrValue)\n        ? observableOrValue\n        : of(observableOrValue);\n      const subscription = observable$\n        .pipe(\n          concatMap((value) =>\n            this.isInitialized\n              ? // Push the value into queueScheduler\n                scheduled([value], queueScheduler).pipe(\n                  withLatestFrom(this.stateSubject$)\n                )\n              : // If state was not initialized, we'll throw an error.\n                throwError(\n                  new Error(`${this.constructor.name} has not been initialized`)\n                )\n          ),\n          takeUntil(this.destroy$)\n        )\n        .subscribe({\n          next: ([value, currentState]) => {\n            this.stateSubject$.next(updaterFn(currentState, value!));\n          },\n          error: (error: Error) => {\n            initializationError = error;\n            this.stateSubject$.error(error);\n          },\n        });\n\n      if (initializationError) {\n        // prettier-ignore\n        throw /** @type {!Error} */ (initializationError);\n      }\n      return subscription;\n    }) as unknown extends V\n      ? () => void\n      : (t: V | Observable<V>) => Subscription;\n  }\n\n  /**\n   * Initializes state. If it was already initialized then it resets the\n   * state.\n   */\n  private initState(state: T): void {\n    scheduled([state], queueScheduler).subscribe((s) => {\n      this.isInitialized = true;\n      this.stateSubject$.next(s);\n    });\n  }\n\n  /**\n   * Sets the state specific value.\n   * @param stateOrUpdaterFn object of the same type as the state or an\n   * updaterFn, returning such object.\n   */\n  setState(stateOrUpdaterFn: T | ((state: T) => T)): void {\n    if (typeof stateOrUpdaterFn !== 'function') {\n      this.initState(stateOrUpdaterFn);\n    } else {\n      this.updater(stateOrUpdaterFn as (state: T) => T)();\n    }\n  }\n\n  /**\n   * Creates a selector.\n   *\n   * This supports combining up to 4 selectors. More could be added as needed.\n   *\n   * @param projector A pure projection function that takes the current state and\n   *   returns some new slice/projection of that state.\n   * @param config SelectConfig that changes the behavoir of selector, including\n   *   the debouncing of the values until the state is settled.\n   * @return An observable of the projector results.\n   */\n  select<R>(projector: (s: T) => R, config?: SelectConfig): Observable<R>;\n  select<R, S1>(\n    s1: Observable<S1>,\n    projector: (s1: S1) => R,\n    config?: SelectConfig\n  ): Observable<R>;\n  select<R, S1, S2>(\n    s1: Observable<S1>,\n    s2: Observable<S2>,\n    projector: (s1: S1, s2: S2) => R,\n    config?: SelectConfig\n  ): Observable<R>;\n  select<R, S1, S2, S3>(\n    s1: Observable<S1>,\n    s2: Observable<S2>,\n    s3: Observable<S3>,\n    projector: (s1: S1, s2: S2, s3: S3) => R,\n    config?: SelectConfig\n  ): Observable<R>;\n  select<R, S1, S2, S3, S4>(\n    s1: Observable<S1>,\n    s2: Observable<S2>,\n    s3: Observable<S3>,\n    s4: Observable<S4>,\n    projector: (s1: S1, s2: S2, s3: S3, s4: S4) => R,\n    config?: SelectConfig\n  ): Observable<R>;\n  select<\n    O extends Array<Observable<unknown> | SelectConfig | ProjectorFn>,\n    R,\n    ProjectorFn = (...a: unknown[]) => R\n  >(...args: O): Observable<R> {\n    const { observables, projector, config } = processSelectorArgs(args);\n\n    let observable$: Observable<unknown>;\n    // If there are no Observables to combine, then we'll just map the value.\n    if (observables.length === 0) {\n      observable$ = this.stateSubject$.pipe(\n        config.debounce ? debounceSync() : (source$) => source$,\n        map(projector)\n      );\n    } else {\n      // If there are multiple arguments, then we're aggregating selectors, so we need\n      // to take the combineLatest of them before calling the map function.\n      observable$ = combineLatest(observables).pipe(\n        config.debounce ? debounceSync() : (source$) => source$,\n        map((projectorArgs) => projector(...projectorArgs))\n      );\n    }\n    return (observable$ as Observable<R>).pipe(\n      distinctUntilChanged(),\n      shareReplay({\n        refCount: true,\n        bufferSize: 1,\n      }),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  /**\n   * Creates an effect.\n   *\n   * This effect is subscribed to for the life of the @Component.\n   * @param generator A function that takes an origin Observable input and\n   *     returns an Observable. The Observable that is returned will be\n   *     subscribed to for the life of the component.\n   * @return A function that, when called, will trigger the origin Observable.\n   */\n  effect<V, R = unknown>(\n    generator: (origin$: Observable<V>) => Observable<R>\n  ): EffectReturnFn<V> {\n    const origin$ = new Subject<V>();\n    generator(origin$)\n      // tied to the lifecycle 👇 of ComponentStore\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n\n    return (observableOrValue?: V | Observable<V>): Subscription => {\n      const observable$ = isObservable(observableOrValue)\n        ? observableOrValue\n        : of(observableOrValue);\n      return observable$.pipe(takeUntil(this.destroy$)).subscribe((value) => {\n        // any new 👇 value is pushed into a stream\n        origin$.next(value);\n      });\n    };\n  }\n}\n\nfunction processSelectorArgs<\n  O extends Array<Observable<unknown> | SelectConfig | ProjectorFn>,\n  R,\n  ProjectorFn = (...a: unknown[]) => R\n>(\n  args: O\n): {\n  observables: Observable<unknown>[];\n  projector: ProjectorFn;\n  config: Required<SelectConfig>;\n} {\n  const selectorArgs = Array.from(args);\n  // Assign default values.\n  let config: Required<SelectConfig> = { debounce: false };\n  let projector: ProjectorFn;\n  // Last argument is either projector or config\n  const projectorOrConfig = selectorArgs.pop() as ProjectorFn | SelectConfig;\n\n  if (typeof projectorOrConfig !== 'function') {\n    // We got the config as the last argument, replace any default values with it.\n    config = { ...config, ...projectorOrConfig };\n    // Pop the next args, which would be the projector fn.\n    projector = selectorArgs.pop() as ProjectorFn;\n  } else {\n    projector = projectorOrConfig;\n  }\n  // The Observables to combine, if there are any.\n  const observables = selectorArgs as Observable<unknown>[];\n  return {\n    observables,\n    projector,\n    config,\n  };\n}\n"]}